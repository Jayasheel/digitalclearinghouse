apiVersion: apps/v1
kind: Deployment
metadata:
  name: gx-registry-server-main
  namespace: gxdch
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gx-registry-server-main
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gx-registry-server-main
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy-alpine:v1.14.1
        imagePullPolicy: IfNotPresent
        args: ["-l", "debug", "--local-address-ip-version", "v4", "-c", "/run/envoy/envoy.yaml"]
        ports:
        - containerPort: 3001
        volumeMounts:
        - name: envoy-config
          mountPath: "/run/envoy"
          readOnly: true
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
      - env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: mongo-creds
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mongo-creds
        - name: PORT
          value: "3000"
        - name: MONGO_DATABASE
          value: trust-registry
        - name: MONGO_HOST
          value: mongo
        - name: MONGO_PORT
          value: "27017"
        - name: BASE_URL
          value: "http://127.0.0.1:3000"
        image: registry.gitlab.com/gaia-x/lab/compliance/gx-registry:main
#       image: gx-registry-local:latest
        imagePullPolicy: IfNotPresent
        name: gx-registry-server-main
        ports:
        - containerPort: 3000
          name: http-api
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: envoy-config
        configMap:
          name: registry-envoy
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
